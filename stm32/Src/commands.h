#include "stm32h7xx_hal.h"

// little-endian
typedef struct {
  uint16_t pokedex_number;              // https://bulbapedia.bulbagarden.net/wiki/List_of_Pok√©mon_by_index_number_(Generation_IV)
  uint16_t held_item;                   // https://bulbapedia.bulbagarden.net/wiki/List_of_items_by_index_number_(Generation_IV)
  uint16_t moves[4];                    // https://bulbapedia.bulbagarden.net/wiki/List_of_moves
  uint8_t level;
  uint8_t variant;                      // low 5 bits are variant (for unown, spinda, arceus, etc). mask 0x20 = female
  uint8_t flags;                        // 0x02 = shiny
  uint8_t padding;
} Pokemon;

// little-endian
typedef struct {
  uint32_t unk_0;               // unknown 0
  uint16_t original_trainer_TID; // trainer id
  uint16_t original_trainer_SID; // secret id
  uint16_t unk_1;
  uint16_t location_met;
  uint16_t unk_2;
  uint16_t original_trainer_name[8];    // https://bulbapedia.bulbagarden.net/wiki/Character_encoding_(Generation_III); doesn't work
  uint8_t  encounter_type;
  uint8_t  ability;                     // https://bulbapedia.bulbagarden.net/wiki/Ability; works
  uint16_t pokeball_type;               // https://bulbapedia.bulbagarden.net/wiki/List_of_items_by_index_number_(Generation_IV); works
  uint8_t  unk[10];
} PokemonExtraParameters;


uint8_t write_pokemon[9] = {
  0x0A,
  0xBA, // high byte of dest address in EEPROM
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,

  0x44 // low byte of dest address in EEPROM
};

uint8_t write_pokemon_extra_data[9] = {
  0x0A,
  0xBA, // high byte of dest address in EEPROM
  0x00,
  0x00,

  0x00,
  0x00,
  0x00,
  0x00,

  0x54 // low byte of dest address in EEPROM
};

uint8_t gift_pokemon[8] = {
  0xC2,
  0x01,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00
};

uint8_t handshake[8] = {
  0xFA,
  0x01,
  0x03,
  0xFA,
  0x00,
  0x00,
  0x00,
  0x00
};

uint8_t request_user_data[8] = {
  0x20,
  0x01,
  0xAA,
  0xAA,
  0xAA,
  0xAA,
  0xAA,
  0xAA
};

uint8_t ds_data[112] = {
  0x52,
  0x01,
  0xAA,
  0xAA,
  0xAA,
  0xAA,
  0xAA,
  0xAA,
  0x01,
  0x00,
  0x00,
  0x00,
  0x01,
  0x00,
  0x00,
  0x00,
  0x08,
  0x00,
  0x08,
  0x00,
  0x1F,
  0x56,
  0xAC,
  0x04,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x37,
  0x01,
  0x33,
  0x01,
  0x2D,
  0x01,
  0x32,
  0x01,
  0x2F,
  0x01,
  0x2B,
  0x01,
  0x36,
  0x01,
  0xFF,
  0xFF,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00
};

uint8_t ping[8] = {
  0x56,
  0x01,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00,
  0x00
};